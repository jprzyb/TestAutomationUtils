import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.Scanner;

public class TestCasesRename {
    public static String env;
    public static String featureFileName;
    public static int primaryTestCaseNumber;
    public static int tcCount;
    public static String testAutomationPath;
    public static String featureFilePath;
    public static String payloadFiles;
    public static String oldPayloadTCprefix;
    public static String newTestCasePrefix;
    public static String TCline = "@TestCaseKey=";

    public static void main(String[] args) {
        enterData();
        initData();
        printData();
        generate();
    }

    private static void generate() {
        generateNewPayload();
//        generateNewFeatureFile();
    }

    public static void enterData(){
        env ="";
        Scanner in = new Scanner(System.in);
        System.out.print("Enter a feature file name(without \".feature\"): ");
        featureFileName = in.next() + ".feature";
        System.out.print("Enter primary test number generated by ZephyrScale(for DIHP-T777 you need to enter a 777): ");
        primaryTestCaseNumber = in.nextInt();
        System.out.print("Enter number of test cases(f.e. 30): ");
        tcCount = in.nextInt();
        System.out.print("Enter current Test Case prefix(for \"TC-8\" enter \"TC-\"): ");
        oldPayloadTCprefix = in.next();
    }
    public static void initData(){
        String projectPath = String.valueOf(Paths.get("").toAbsolutePath());
        String[] dirSplit = projectPath.split("\\\\");
        testAutomationPath = projectPath.replace(dirSplit[dirSplit.length-1],"test-automation");
        featureFilePath = testAutomationPath+"\\resources\\featureFiles\\";
        if(featureFileName.contains("DEV")) env = "DEV";
        else if(featureFileName.contains("SIT")) env = "SIT";
        else if(featureFileName.contains("UAT")) env = "UAT";
        payloadFiles = testAutomationPath+"\\src\\test\\resources\\Payload\\"+env+"\\";
        newTestCasePrefix = "DIHP-T";
    }
    public static void printData(){
        System.out.println("env: " + env);
        System.out.println("featureFileName: " + featureFileName);
        System.out.println("primaryTestCaseNumber: " + primaryTestCaseNumber);
        System.out.println("tcCount: " + tcCount);
        System.out.println("testAutomationPath: " + testAutomationPath);
        System.out.println("featureFilePath: " + featureFilePath);
        System.out.println("payloadFiles: " + payloadFiles);
        System.out.println("oldPayloadTCprefix: " + oldPayloadTCprefix);
        System.out.println("newTestCasePrefix: " + newTestCasePrefix);
    }

    public static void generateNewPayload(){
        int k=1;
        for(int i=primaryTestCaseNumber;i<primaryTestCaseNumber+tcCount;i++){
            Path sourcePath = Paths.get(payloadFiles + oldPayloadTCprefix + k +".json");
            Path destinationPath = Paths.get(payloadFiles+newTestCasePrefix+i+".json");
            System.out.println(sourcePath + " > " + destinationPath);
            k++;
            try {
                Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
    public static void generateNewFeatureFile(String newTcName){
        String destinationFilePath = featureFilePath.replace(featureFileName, featureFileName+"-new.feature");
        try (BufferedReader reader = new BufferedReader(new FileReader(featureFilePath));
             BufferedWriter writer = new BufferedWriter(new FileWriter(destinationFilePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.contains(TCline)) line = TCline+newTcName;
                System.out.println(line);
//                writer.write(line);
//                writer.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
